// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  clerkUserId String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  createdAt   DateTime @default(now())

  projects Project[] @relation("creator")
  members  Project[] @relation("members")
  token    Token?    @relation("token")
}

model Token {
  id     Int    @id @default(autoincrement())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id], name: "token")
  userId Int    @unique
  createdAt  DateTime @default(now())
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(150)
  description String        @db.Text
  createdAt   DateTime      @default(now())
  creator     User          @relation(fields: [creatorId], references: [id], name: "creator")
  creatorId   Int
  users       User[]        @relation("members")
  variables   EnvVariable[] @relation("variables")
}

model EnvVariable {
  id        Int     @id @default(autoincrement())
  key       String
  value     String  @unique
  envType   EnvType
  project   Project @relation(fields: [projectId], references: [id], name: "variables")
  projectId Int

  @@unique([key, projectId])
}

enum EnvType {
  DEV
  TEST
  STAGING
  PRODUCTION
}
